<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- 채팅방 리스트 -->
<div id="chat-container">
    <div class="content-wrapper">
        <div class="chat-list">
            <div class="header-container">
                <h1 class="page-title">스터디그룹</h1>
                <div class="header-buttons">
                    <button id="createChatRoom">채팅방 만들기</button>
                </div>
            </div>
            <input type="text" id="searchInput" placeholder="채팅방 검색...">
            <div id="chatRoomsList"></div>
        </div>

        <!-- 채팅방 생성 모달창 -->
        <div class="chat-room-modal">
            <div class="chat-room-window">
                <div class="chat-room-popup">
                    <div class="chat-room-form-wrap">
                        <button id="closeChatRoomModal">x</button>
                        <div class="chat-room-form-content">
                            <h2>채팅방 만들기</h2>
                            <div class="chat-room-form">
                                <form id="createChatRoomForm">
                                    <div class="chat-room-input-group">
                                        <input id="newRoomName" type="text" class="chat-room-input" placeholder="채팅방 이름"
                                            required>
                                    </div>
                                    <div class="chat-room-input-group">
                                        <input id="newRoomDescription" type="text" class="chat-room-input"
                                            placeholder="채팅방 설명" required>
                                    </div>
                                    <div class="chat-room-input-group">
                                        <input id="newRoomTags" type="text" class="chat-room-input"
                                            placeholder="해시태그 (쉼표로 구분)" required>
                                    </div>
                                    <div class="chat-room-input-group" id="chat-room-submit-btn">
                                        <button type="submit">채팅방 만들기</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- 채팅룸 -->
        <div class="chat-room">
            <div class="chat-room-header">
                <button id="leaveRoom" class="back-button">&#60;</button>
                <h2 id="roomName"></h2>
                <button id="searchMessages" class="search-button">&#128269;</button>
            </div>
            <div class="chat-messages" id="chatMessages"></div>
            <div class="chat-input">
                <input type="text" id="messageInput" placeholder="최대 200자까지 입력 가능합니다.">
                <button id="sendMessage">전송</button>
            </div>
        </div>

    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    $(document).ready(function () {
        const socket = io();

        socket.on('connect', () => {
            console.log('Socket connected');
        });

        let currentRoom = null;
        const currentUser = '<%= user.mem_id %>';
        let chatRooms = [];

        // 채팅방 목록 가져오기
        function fetchChatRooms() {
            $.ajax({
                url: '/chat/list',
                method: 'GET',
                success: function (response) {
                    chatRooms = response;
                    renderChatRooms(response);
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        text: '목록 로드 실패'
                    });
                }
            });
        }

        // 채팅방 렌더링
        function renderChatRooms(rooms) {
            $('#chatRoomsList').empty();
            if (rooms.length === 0) {
                $('#chatRoomsList').append('<p>검색 결과가 없습니다.</p>');
            } else {
                rooms.forEach((room) => {
                    const deleteButton = room.mem_id === currentUser
                        ? `<button class="delete-room" data-id="${room.group_idx}">삭제</button>`
                        : '';
                    $('#chatRoomsList').append(
                        `<div class="chat-room-item" data-id="${room.group_idx}">
                        <div class="chat-room-info">
                            <div class="chat-room-name">${room.group_name}</div>
                            <div class="chat-room-description">${room.group_desc}</div>
                            <div class="chat-room-tags">${room.group_hash}</div>
                        </div>
                        <div class="chat-room-actions">
                            ${deleteButton}
                        </div>
                    </div>`
                    );
                });
            }
        }
        // 채팅방 삭제
        $(document).on('click', '.delete-room', function (e) {
            e.stopPropagation();
            const roomId = $(this).data('id');
            if (confirm('정말로 이 채팅방을 삭제하시겠습니까?')) {
                socket.emit('delete room', roomId);
            }
        });
        // 모달창 보여주기
        function showChatRoomModal() {
            document.querySelector(".chat-room-modal").className = "chat-room-modal show";
        }

        // 모달창 숨기기
        function closeChatRoomModal() {
            document.querySelector(".chat-room-modal").className = "chat-room-modal";
        }

        // 채팅방 만들기 버튼 클릭 시 모달창 열기
        document.querySelector("#createChatRoom").addEventListener("click", showChatRoomModal);

        // 모달창 닫기 버튼
        document.querySelector("#closeChatRoomModal").addEventListener("click", closeChatRoomModal);

        // 채팅방 생성 폼 제출
        $('#createChatRoomForm').submit(function (e) {
            e.preventDefault();
            const newRoomName = $('#newRoomName').val();
            const newRoomDescription = $('#newRoomDescription').val();
            const newRoomTags = $('#newRoomTags').val();
            const newRoomID = '<%= user.mem_id %>';

            if (newRoomName && newRoomDescription && newRoomTags && newRoomID) {
                $.ajax({
                    url: '/chat/create',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        groupName: newRoomName,
                        groupDesc: newRoomDescription,
                        groupHash: newRoomTags,
                        mem_id: newRoomID
                    }),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: '스터디그룹이 생성 되었습니다.'
                            });
                            closeChatRoomModal();
                            $('#createChatRoomForm')[0].reset();
                            fetchChatRooms(); // 새로 생성된 채팅방 목록을 다시 로드
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            text: '방 생성 실패',
                        });
                    }
                });
            } else {
                alert('모든 정보를 입력해주세요.');
            }
        });

        // 채팅방 검색
        $('#searchInput').on('input', function () {
            const searchTerm = $(this).val().toLowerCase();
            const filteredRooms = chatRooms.filter(room =>
                room.name.toLowerCase().includes(searchTerm) ||
                room.description.toLowerCase().includes(searchTerm) ||
                room.tags.some(tag => tag.toLowerCase().includes(searchTerm))
            );
            renderChatRooms(filteredRooms);
        });

        fetchChatRooms(); // 페이지 로드 시 채팅방 목록을 가져옴
        // --------------------------------------------------------- 1차 수정 완료 --------------------------------------------------

        // 채팅방 보여주기
        function showChatRoom(room) {
            currentRoom = room;
            $('.chat-list').hide();
            $('.chat-room').show();
            $('#roomName').text(room.group_name);
            $('.chat-messages').empty();
            startMessagePolling(room.group_idx);

            if (room.mem_id === currentUser) {
                $('#searchMessages').replaceWith('<button id="clearMessages" class="clear-button">채팅내역 지우기</button>');
            } else {
                $('.clear-button').replaceWith('<button id="searchMessages" class="search-button">&#128269;</button>');
            }
        }


        // 채팅 내역 지우기
        $(document).on('click', '#clearMessages', function () {
            if (confirm('정말로 모든 채팅 내역을 지우시겠습니까?')) {
                socket.emit('clear messages', currentRoom.group_idx);
            }
        });

        // 채팅 목록으로 돌아가기
        function showChatList() {
            if (currentRoom) {
                socket.emit('leave room', currentRoom.group_idx);
            }
            currentRoom = null;
            stopMessagePolling();
            $('.chat-room').hide();
            $('.chat-list').show();
        }

        let isScrolledToBottom = true;

        // 채팅 메시지 로드
        let lastMessageDate = null;

        function loadChatMessages(groupIdx) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: `/chat/messages/${groupIdx}`,
                    method: 'GET',
                    success: function (messages) {
                        isScrolledToBottom = isAtBottom();
                        $('#chatMessages').empty();
                        lastMessageDate = null;
                        messages.forEach(message => {
                            const today = new Date().toISOString().split('T')[0];
                            appendMessage(message.mem_id, message.chat, new Date(`${today}T${message.chat_at}`));
                        });
                        if (isScrolledToBottom) {
                            scrollToBottom();
                        }
                        resolve();
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            text: '메시지 로드 실패'
                        });
                        reject(error);
                    }
                });
            });
        }

        function shouldAddDateSeparator(messageDate) {
            if (!lastMessageDate) return true;
            return !isSameDay(lastMessageDate, messageDate);
        }

        function addDateSeparator(date) {
            const separatorHtml = `
        <div class="date-separator">
            <span>${formatDate(date)}</span>
        </div>
    `;
            $('#chatMessages').append(separatorHtml);
        }

        function formatDate(date) {
            return date.toLocaleDateString('ko-KR', { year: 'numeric', month: 'long', day: 'numeric' });
        }

        function formatTime(date) {
            return date.toLocaleTimeString('ko-KR', { hour: '2-digit', minute: '2-digit' });
        }

        function isSameDay(date1, date2) {
            return date1.getFullYear() === date2.getFullYear() &&
                date1.getMonth() === date2.getMonth() &&
                date1.getDate() === date2.getDate();
        }

        function isAtBottom() {
            const chatMessages = document.getElementById('chatMessages');
            return chatMessages.scrollHeight - chatMessages.clientHeight <= chatMessages.scrollTop + 1;
        }

        let messagePollingInterval;

        function startMessagePolling(roomId) {
            stopMessagePolling(); // 이전 폴링 중지
            messagePollingInterval = setInterval(() => {
                loadChatMessages(roomId);
            }, 500); // 0.5초마다 메시지 로드
        }

        function stopMessagePolling() {
            if (messagePollingInterval) {
                clearInterval(messagePollingInterval);
                messagePollingInterval = null;
            }
        }

        // 이벤트 리스너
        $(document).on('click', '.chat-room-item', function () {
            const roomId = $(this).data('id');
            const room = chatRooms.find(r => r.group_idx === roomId);
            if (room) {
                showChatRoom(room);
            }
        });

        $('#sendMessage').click(sendMessage);

        $('#messageInput').keypress(function (e) {
            if (e.which == 13) { // Enter key
                sendMessage();
            }
        });

        // 채팅 메시지 전송
        function sendMessage() {
            const message = $('#messageInput').val().trim();
            if (message && currentRoom) {
                socket.emit('chat message', {
                    groupIdx: currentRoom.group_idx,
                    memId: currentUser,
                    chat: message
                });
                $('#messageInput').val('');
            }
        }

        // 메시지 추가
        function appendMessage(sender, content, time) {
            const isMyMessage = sender === currentUser;
            const messageClass = isMyMessage ? 'my-message' : 'other-message';
            const formattedTime = formatTime(time);

            if (shouldAddDateSeparator(time)) {
                addDateSeparator(time);
            }

            const messageHtml = `
        <div class="message ${messageClass}">
            <div class="message-content">${content}</div>
            <div class="message-time">${formattedTime}</div>
        </div>
    `;

            $('#chatMessages').append(messageHtml);
            if (isScrolledToBottom) {
                scrollToBottom();
            }

            lastMessageDate = time;
        }

        // 스크롤을 항상 아래로
        function scrollToBottom() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // 스크롤 이벤트 리스너 추가
        $('#chatMessages').on('scroll', function () {
            isScrolledToBottom = isAtBottom();
        });

        $('#leaveRoom').click(showChatList);


        //  메세지 검색인데 여차하면 삭제할거
        $('#searchMessages').click(function () {
            // 메시지 검색 기능 구현
            const searchTerm = prompt("검색할 내용을 입력하세요:");
            if (searchTerm) {
                searchMessages(searchTerm);
            }
        });

        // 메세지 일치되면 노란색으로 바뀜
        function searchMessages(term) {
            const messages = $('.message');
            messages.each(function () {
                const message = $(this);
                if (message.text().toLowerCase().includes(term.toLowerCase())) {
                    message.css('background-color', 'yellow');
                } else {
                    message.css('background-color', '');
                }
            });
        }

        // Socket 이벤트 리스너
        socket.on('chat message', function (message) {
            const chatDate = message.chat_at ? new Date(`1970-01-01T${message.chat_at}`) : new Date();
            appendMessage(message.mem_id, message.chat, chatDate);
            scrollToBottom();
        });

        socket.on('room deleted', function (roomId) {
            $(`[data-id="${roomId}"]`).remove();
            if (currentRoom && currentRoom.group_idx === roomId) {
                showChatList();
            }
        });

        socket.on('messages cleared', function () {
            $('#chatMessages').empty();
        });
    });



</script>